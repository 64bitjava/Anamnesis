<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Anamnesis</name>
    </assembly>
    <members>
        <member name="P:Anamnesis.IMemory`1.Name">
            <summary>
            Gets a value used to identify this memory when logging.
            </summary>
        </member>
        <member name="P:Anamnesis.IMemory`1.Value">
            <summary>
            Gets or sets the value in memory.
            </summary>
        </member>
        <member name="P:Anamnesis.IMemory`1.Freeze">
            <summary>
            Gets or sets a value indicating whether the value should be frozen in memory, preventing ffxiv from overwriting it.
            </summary>
        </member>
        <member name="M:Anamnesis.IMemory`1.SetValue(`0,System.Boolean)">
            <summary>
            Sets the value in memory.
            </summary>
            <param name="value">the value to write.</param>
            <param name="immediate">should this value be pushed into process memory immediately.</param>
        </member>
        <member name="T:Anamnesis.Offsets.FlagOffset">
            <summary>
            Flag offsets are special offsets that indicate a static chunk of memory to be written for either
            On or Off states. Flag Offsets cannot be altered otherwise.
            </summary>
        </member>
        <member name="M:Anamnesis.Process.WinProcess.OpenProcess(System.Diagnostics.Process)">
            <summary>
            Open the PC game process with all security and access rights.
            </summary>
        </member>
        <member name="M:Anamnesis.Quaternion.FromEuler(Anamnesis.Vector)">
            <summary>
            Convert into a Quaternion assuming the Vector represents euler angles.
            </summary>
            <returns>Quaternion from Euler angles.</returns>
        </member>
    </members>
</doc>
